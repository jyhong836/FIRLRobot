* FIRLRobot TODO list
	- {{FEATURES (beta 1.0)}}
	- {{ISSUE}}
	- {{BUGS}}
	- {{OTHERS}}
	- {{AUTHOR}}
	- {{LINK}}

--- start ---
* FEATURES (beta 1.0) [11/13]
	- [X] Take screenshot of bovo
	- [X] Auto read chessboard from the bovo screen shot
	- [X] Robot go steps by estimating mouse
	- [X] Use Simplified Artificial Neural Network learn from the chessboard. (learning object is self)
	- [X] Use Simplified Artificial Neural Network learn from the chessboard. (learning object is opponent)
	- [ ] Take the first step part into consideration
	- [X] Save the neccessary learning data from playing to variables
	- [ ] Store important learning data to files
	- [X] Store learning results (robot :brain:) into files, to make it as fast as possible to load the robot brain
	- [X] Save Weight matrix 'W' to file 'W.npy'
	- [X] Save the W matrix to files, and show the W matrix with plt.imshow()
	- [X] In robot.learn_self and robot.learn_oppo, for less steps the active value is more large, and punish value is less.
	- [X] Apply the Model 1 Method 2 to robot.learn_opponent

* ISSUE [1/3]
	- [X] HOW to learn, or which learning model should be applied?
		* MODEL 1
			- P_t = W*B_t, P is 22x1 reshped chessboard probability matrix, W is linked wight matrix, B 22x1 reshped chessboard matrix. For P_N = F, F is the result of this game.
		* MODEL 2
			- P_t = W*B_t + v, v is Gaussian white noise
		* MODEL 3
			- X_t = W*B + X_{t-1} + v, X is the state matrix at time t.
			- P_t = U*X_t 
	- [ ] Training Method
		* Model 1
			- [X] Method 1
				- W = W + k*(P_{t+1} - P_t), t = 0...N-1
				- W = W + k*(F - P_{N-1})
			- [ ] Method 2
				- W = W + k*(T_t - P_t), t = 0...N-1, T_t is the step of the game ai at step t
				- W = W + k*(F - P_{N-1})
		* Model 2
		* Model 3
	- [ ] What's the learning data?
		- Learn from opponent nowadays.
	- [ ] The W matrix should be symmetrical?

* BUGS [7/9]
	- [ ] In learning model, red(1), green(2) have the different weight in setting, respect for the different prefer for them?
	- [X] In ROBOT_MODE.equal function, the compare string is wrong
	- [X] Start new game at sart, but have not pause for 1 second. As a result, the first step will start a new game if the chessboard is a over game.
	- [X] The game rounds should be set but not the max steps
	- [X] Incorrect steps in robot.py
	- [X] The W matrix is not updated
	- [X] The wait time 1 second may be too short for some situation
	- [X] The Game Start click often failed
	- [ ] !! the diff_abs_max may be zero <= sometimes click not walk
	- [ ] The W matrix is not symmetrical in unstrict level.

* OTHERS [1/2]
	- [ ] update README.md
	- [X] push to github
	- [ ] draw all W matrix in Model 1, Method 1

* AUTHOR
	- Jnyuan Hong [[mailto:jyhong836@gmail.com]]

* LINK
	{1} bovo development page [[https://www.kde.org/applications/games/bovo/development]]